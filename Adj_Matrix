#include <stdio.h>
#include <stdlib.h>

// Function to create an adjacency matrix for a graph with a given number of vertices
int** createAdjacencyMatrix(int numVertices) {
    int** matrix = (int**)malloc(numVertices * sizeof(int*));
    for (int i = 0; i < numVertices; i++) {
        matrix[i] = (int*)malloc(numVertices * sizeof(int));
        for (int j = 0; j < numVertices; j++) {
            matrix[i][j] = 0; // Initialize all entries to 0 (no edges)
        }
    }
    return matrix;
}

// Function to add an edge to the adjacency matrix
void addEdge(int** matrix, int src, int dest) {
    matrix[src][dest] = 1;
    matrix[dest][src] = 1; // If the graph is undirected
}

// Function to print the adjacency matrix
void printMatrix(int** matrix, int numVertices) {
    printf("Adjacency Matrix:\n");
    for (int i = 0; i < numVertices; i++) {
        for (int j = 0; j < numVertices; j++) {
            printf("%d ", matrix[i][j]);
        }
        printf("\n");
    }
}

int main() {
    int numVertices = 5;
    int** adjacencyMatrix = createAdjacencyMatrix(numVertices);

    addEdge(adjacencyMatrix, 0, 1);
    addEdge(adjacencyMatrix, 0, 2);
    addEdge(adjacencyMatrix, 1, 3);
    addEdge(adjacencyMatrix, 2, 4);

    printMatrix(adjacencyMatrix, numVertices);
    return 0;
}
